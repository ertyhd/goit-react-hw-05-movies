{"version":3,"file":"static/js/873.a35361cb.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://goit-react-hw-05-movies/./src/modules/MoviesSearch/MoviesSearchForm/moviesSearch.module.css?a477","modules/MoviesSearch/MoviesSearchForm/MoviesSearchForm.jsx","webpack://goit-react-hw-05-movies/./src/modules/MoviesSearch/moviesSearch.module.css?f10f","modules/MoviesSearch/MoviesSearch.jsx","pages/MoviesSearchPage/MoviesSearchPage.jsx","shared/components/moviesList.module.css","shared/components/MoviesList.jsx","shared/services/getMovies.js"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"search_btn\":\"moviesSearch_search_btn__DSnbw\",\"search_input\":\"moviesSearch_search_input__fHAM+\"};","import { memo } from 'react';\nimport { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './moviesSearch.module.css';\n\nconst MoviesSearchForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ search: '' });\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState({ [name]: value });\n    },\n    [setState]\n  );\n\n  const handleSubmit = e => {\n    e.preventdefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { search } = state;\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"\">Search</label>\n        <input\n          className={style.search_input}\n          value={search}\n          onChange={handleChange}\n          name=\"search\"\n          placeholder=\"Search movie\"\n          required\n        />\n        <button className={style.search_btn} type=\"submit\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default memo(MoviesSearchForm);\n\nMoviesSearchForm.defaultProps = {\n  initialState: {\n    search: '',\n  },\n};\n\nMoviesSearchForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  handleChange: PropTypes.func,\n  search: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search_block\":\"moviesSearch_search_block__N6gEP\"};","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport MoviesSearchForm from './MoviesSearchForm/MoviesSearchForm';\nimport MoviesList from 'shared/components/MoviesList';\nimport { searchMovies } from 'shared/services/getMovies';\n\nimport style from './moviesSearch.module.css';\n\nconst MoviesSearch = () => {\n  const [items, setItems] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n  const page = searchParams.get('page');\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const data = await searchMovies(search, page);\n        setItems([...data.results]);\n      } catch ({ responce }) {\n        console.log(responce.data.message);\n      }\n    };\n    fetchMovies();\n  }, [search, page, setItems]);\n\n  const onSearchMovies = useCallback(\n    ({ search }) => {\n      setSearchParams({ search, page: 1 });\n      setItems([]);\n    },\n    [setSearchParams]\n  );\n  return (\n    <div className={style.search_block}>\n      <MoviesSearchForm initialState={{ search }} onSubmit={onSearchMovies} />\n      <MoviesList items={items} />\n    </div>\n  );\n};\n\nexport default MoviesSearch;\n\nMoviesSearch.propTypes = {\n  items: PropTypes.array,\n  onSearchMovies: PropTypes.func,\n  search: PropTypes.string,\n};\n","import MoviesSearch from 'modules/MoviesSearch/MoviesSearch';\n\n// import style from './moviesSearchPage.module.css';\n\nconst MoviesSearchPage = () => {\n  return <MoviesSearch />;\n};\n\nexport default MoviesSearchPage;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport style from './moviesList.module.css';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title }) => (\n    <Link\n      key={id}\n      to={`/goit-react-hw-05-movies/movies/${id}`}\n      className={style.moviesItem}\n      state={{ from: location }}\n    >\n      <li>{title}</li>\n    </Link>\n  ));\n  return <ul className={style.moviesList}>{elements}</ul>;\n};\n\nexport default memo(MoviesList);\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '633bd9c8c9bc68a8c4a40449237d5fcd',\n  },\n});\n\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n// //============================================\n// export const getMoviesDetails = async id => {\n//   const requestDetails = {};\n//   const { data } = await instance.get(`/movie/${id}`);\n//   requestDetails.original_title = data.original_title\n//     ? data.original_title\n//     : 'n/a';\n//   requestDetails.poster_path = `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${data.poster_path}`;\n//   requestDetails.popularity = data.popularity;\n//   requestDetails.overview = data.overview;\n//   requestDetails.release_date = data.release_date\n//     ? data.release_date.slice(0, 4)\n//     : 'n/a';\n//   requestDetails.genres = data.genres\n//     .map(gen => {\n//       return gen.name;\n//     })\n//     .join(', ');\n\n//   return requestDetails;\n// };\n//===========================================\nexport const getMoviesDetails = async id => {\n  const {\n    data: {\n      original_title = 'n/a',\n      poster_path,\n      vote_average,\n      overview,\n      release_date: release_date_slice = 'n/a',\n      genres: genres_map,\n    },\n  } = await instance.get(`/movie/${id}`);\n\n  const requestDetails = {\n    original_title,\n    poster_path: poster_path\n      ? `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${poster_path}`\n      : null,\n    vote_average,\n    overview,\n    release_date: release_date_slice.slice(0, 4),\n    genres: genres_map.map(gen => gen.name).join(', '),\n  };\n\n  return requestDetails;\n};\n\nexport const getMoviesAdditionally = async (id, req = '') => {\n  const { data } = await instance.get(`/movie/${id}${req}`);\n  return data;\n};\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MoviesSearchForm","initialState","onSubmit","useState","search","state","setState","handleChange","useCallback","name","className","style","e","preventdefault","htmlFor","onChange","placeholder","required","type","memo","defaultProps","items","setItems","useSearchParams","searchParams","setSearchParams","get","page","useEffect","fetchMovies","searchMovies","data","results","responce","console","log","message","onSearchMovies","MoviesList","location","useLocation","elements","map","id","title","to","from","instance","axios","baseURL","params","api_key","query","getMovies","getMoviesDetails","original_title","poster_path","vote_average","overview","release_date","release_date_slice","genres_map","genres","requestDetails","slice","gen","join","getMoviesAdditionally","req"],"sourceRoot":""}