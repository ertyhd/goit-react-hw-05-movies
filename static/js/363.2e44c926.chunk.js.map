{"version":3,"file":"static/js/363.2e44c926.chunk.js","mappings":"2OA2DA,UAjD4B,WAC1B,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAEfF,GAAW,GAFI,UAGMG,EAAAA,EAAAA,IAAsBN,EAAI,YAHhC,OAGTO,EAHS,OAIfR,EAAgBQ,GAJD,gDAKNC,EALM,KAKNA,SACTC,QAAQC,IAAIF,EAASG,KAAKC,SANX,yBAQfT,GAAW,GARI,4EAAH,qDAWhBE,GACD,GAAE,CAACL,IA4BJ,OA1BiB,SAAC,GAAc,IAAZa,EAAW,EAAXA,KAClB,GAAKA,EAAL,CAGA,IAAMC,EAAWD,EAAKE,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACxB,2BACE,gBACEC,IAAI,SACJC,MAAM,QACNC,IACEL,EAAY,6DAC8CA,GACtDM,KAGR,kCAAUL,MACV,uCAAeC,OAXRlB,EADe,IAe1B,OACE,0BACGE,EAAUqB,EAAAA,QAAAA,SAAiB,cAAgBA,EAAAA,QAAAA,SAC3CT,IAnBJ,CAsBF,CACMU,CAAS1B,EACjB,C,8JCvDK2B,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACHP,EAASQ,IAAI,gBAAiB,CACnDL,OAAQ,CACNG,MAAAA,EACAC,KAAAA,KAJsB,uBAClBrB,EADkB,EAClBA,KADkB,kBAOnBA,GAPmB,2CAAH,sDAUZuB,EAAS,mCAAG,sGACAT,EAASQ,IAAI,uBADb,uBACftB,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,qDA0BTwB,EAAgB,mCAAG,WAAMnC,GAAN,2GAUpByB,EAASQ,IAAT,iBAAuBjC,IAVH,2BAE5BW,KAF4B,IAG1ByB,eAAAA,OAH0B,MAGT,MAHS,EAI1BC,EAJ0B,EAI1BA,YACAC,EAL0B,EAK1BA,aACAC,EAN0B,EAM1BA,SAN0B,IAO1BC,aAAcC,OAPY,MAOS,MAPT,EAQlBC,EARkB,EAQ1BC,OAIEC,EAAiB,CACrBR,eAAAA,EACAC,YAAaA,EAAW,6DACkCA,GACtD,KACJC,aAAAA,EACAC,SAAAA,EACAC,aAAcC,EAAmBI,MAAM,EAAG,GAC1CF,OAAQD,EAAW3B,KAAI,SAAA+B,GAAG,OAAIA,EAAI7B,IAAR,IAAc8B,KAAK,OApBjB,kBAuBvBH,GAvBuB,4CAAH,sDA0BhBtC,EAAqB,mCAAG,WAAON,GAAP,8FAAWgD,EAAX,+BAAiB,GAAjB,SACZvB,EAASQ,IAAT,iBAAuBjC,GAAvB,OAA4BgD,IADhB,uBAC3BrC,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,qD","sources":["pages/SingleMovieCastPage/SingleMovieCastPage.jsx","shared/services/getMovies.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nimport { getMoviesAdditionally } from 'shared/services/getMovies';\n\nimport noPhoto from 'img/no_photo.jpg';\n\n// import style from './singleMovieCastPage.module.css';\n\nconst SingleMovieCastPage = () => {\n  const [movieDetails, setMovieDetails] = useState('');\n  const { id } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        const result = await getMoviesAdditionally(id, '/credits');\n        setMovieDetails(result);\n      } catch ({ responce }) {\n        console.log(responce.data.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  const CastList = ({ cast }) => {\n    if (!cast) {\n      return;\n    }\n    const elements = cast.map(({ id, profile_path, name, character }) => (\n      <li key={id}>\n        <img\n          alt=\"actors\"\n          width=\"120px\"\n          src={\n            profile_path\n              ? `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${profile_path}`\n              : noPhoto\n          }\n        />\n        <p>Name: {name}</p>\n        <p>Character: {character}</p>\n      </li>\n    ));\n    return (\n      <ul>\n        {loading ? Loading.standard('Loading...') : Loading.remove()}\n        {elements}\n      </ul>\n    );\n  };\n  return CastList(movieDetails);\n};\n\nexport default SingleMovieCastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '633bd9c8c9bc68a8c4a40449237d5fcd',\n  },\n});\n\nexport const searchMovies = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n// //============================================\n// export const getMoviesDetails = async id => {\n//   const requestDetails = {};\n//   const { data } = await instance.get(`/movie/${id}`);\n//   requestDetails.original_title = data.original_title\n//     ? data.original_title\n//     : 'n/a';\n//   requestDetails.poster_path = `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${data.poster_path}`;\n//   requestDetails.popularity = data.popularity;\n//   requestDetails.overview = data.overview;\n//   requestDetails.release_date = data.release_date\n//     ? data.release_date.slice(0, 4)\n//     : 'n/a';\n//   requestDetails.genres = data.genres\n//     .map(gen => {\n//       return gen.name;\n//     })\n//     .join(', ');\n\n//   return requestDetails;\n// };\n//===========================================\nexport const getMoviesDetails = async id => {\n  const {\n    data: {\n      original_title = 'n/a',\n      poster_path,\n      vote_average,\n      overview,\n      release_date: release_date_slice = 'n/a',\n      genres: genres_map,\n    },\n  } = await instance.get(`/movie/${id}`);\n\n  const requestDetails = {\n    original_title,\n    poster_path: poster_path\n      ? `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${poster_path}`\n      : null,\n    vote_average,\n    overview,\n    release_date: release_date_slice.slice(0, 4),\n    genres: genres_map.map(gen => gen.name).join(', '),\n  };\n\n  return requestDetails;\n};\n\nexport const getMoviesAdditionally = async (id, req = '') => {\n  const { data } = await instance.get(`/movie/${id}${req}`);\n  return data;\n};\n"],"names":["useState","movieDetails","setMovieDetails","id","useParams","loading","setLoading","useEffect","fetchMovie","getMoviesAdditionally","result","responce","console","log","data","message","cast","elements","map","profile_path","name","character","alt","width","src","noPhoto","Loading","CastList","instance","axios","baseURL","params","api_key","searchMovies","query","page","get","getMovies","getMoviesDetails","original_title","poster_path","vote_average","overview","release_date","release_date_slice","genres_map","genres","requestDetails","slice","gen","join","req"],"sourceRoot":""}